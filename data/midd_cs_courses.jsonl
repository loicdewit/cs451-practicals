{"number": 101, "title": "Introduction to Computing", "description": "Introduction to Computing\nIn this course we will provide a broad introductory overview of the \ndiscipline of computer science, with no prerequisites or assumed prior \nknowledge of computers or programming. A significant component of the \ncourse is an introduction to algorithmic concepts and to programming \nusing Python; programming assignments will explore algorithmic \nstrategies such as selection, iteration, divide-and-conquer, and \nrecursion, as well as introducing the Python programming language. \nAdditional topics will include: the structure and organization of \ncomputers, the Internet and World Wide Web, abstraction as a means of \nmanaging complexity, social and ethical computing issues, and the \nquestion \"What is computation?\" (Juniors and Seniors by waiver) 3 hr. \nlect./1 hr. lab                  DED\n\nSpring 2017, Fall 2017, Spring 2018, Fall 2018, Spring 2019, Fall 2019, Spring 2020\nMore Information \u00bb"}
{"number": 105, "title": "Algorithmic World", "description": "Understanding Our Algorithmic World\nIn this course through lectures, labs, and discussions, we will examine \nthe nature of computers and their role in our lives. We will use the \nlens of multimedia programming to learn basic computer programming and \nhow computers represent and manipulate many common forms of data, such \nas text and images. We will also talk about the history of computers and\n learn how they interoperate to create the world we know today, and we \nwill examine the societal impacts of technology on our lives, including \nimplications for privacy, access to resources, and the increasing role \nof algorithms in shaping our world. (not open to students who have taken\n CSCI 0145 or higher) 3 hrs. lect./lab                  DED\n\nFall 2020, Spring 2022\nMore Information \u00bb"}
{"number": 110, "title": "Programming through Simulation", "description": "Introduction to Programming through Simulation\nIn this course we will introduce computer programming through the \nexploration and writing of computer simulations with applications to \necological sciences and social sciences. We will use NetLogo as a \nsoftware/programming tool for developing agent-based simulations. \nStudents will learn basic programming constructs such as variables, \nconditionals, loops, procedures, and recursion as well as tools for \nexperimenting with computer simulations.  No prior experience in \nprogramming is expected or required. (not open to students who have \ntaken CSCI 0145 or higher) (formerly CSCI 0190) 3 hrs. lect./disc. 1 \nhour lab.                  DED\n\nFall 2021\nMore Information \u00bb"}
{"number": 145, "title": "Introduction to Computing", "description": "Introduction to Computing\nIn this course we will provide a broad introductory overview of the \ndiscipline of computer science, with no prerequisites or assumed prior \nknowledge of computers or programming. A significant component of the \ncourse is an introduction to algorithmic concepts and to programming \nusing Python; programming assignments will explore algorithmic \nstrategies such as selection, iteration, divide-and-conquer, and \nrecursion, as well as introducing the Python programming language. \nAdditional topics will include: the structure and organization of \ncomputers, the Internet and World Wide Web, abstraction as a means of \nmanaging complexity, social and ethical computing issues, and the \nquestion \"What is computation?\" (Juniors and Seniors by waiver) \n(formerly CSCI 0101) 3 hr. lect./1 hr. lab                  DED\n\nFall 2020, Spring 2021, Fall 2021, Spring 2022\nMore Information \u00bb"}
{"number": 150, "title": "Computing for the Sciences", "description": "Computing for the Sciences\nIn this course we will provide an introduction to the field of computer \nscience geared towards students interested in mathematics and the \nnatural sciences. We will study problem-solving approaches and \ncomputational techniques utilized in a variety of domains including \nbiology, chemistry, physics, and engineering. Students will learn how to\n program in Python and other languages, how to extract information from \nlarge data sets, and how to utilize a variety of tools employed in \nscientific computation. The course has no prerequisites and assumes no \nprior experience with programming or computer science. (Juniors and \nSeniors by waiver) 3 hrs. lect./lab                  DED\n\nSpring 2017, Fall 2017, Spring 2018, Fall 2018, \nSpring 2019, Fall 2019, Spring 2020, Fall 2020, Spring 2021, Fall 2021, \nSpring 2022\nMore Information \u00bb"}
{"number": 200, "title": "Math Foundations of Computing", "description": "Mathematical Foundations of Computing\nIn this course we will provide an introduction to the mathematical \nfoundations of computer science, with an emphasis on formal reasoning. \nTopics will include propositional and predicate logic, sets, functions, \nand relations; basic number theory; mathematical induction and other \nproof methods; combinatorics, probability, and recurrence relations; \ngraph theory; and models of computation. (CSCI 0145 or CSCI 0150) \n(Juniors and Seniors by waiver) 3 hrs. lect./lab                  DED\n\nSpring 2017, Fall 2017, Spring 2018, Fall 2018, \nSpring 2019, Fall 2019, Spring 2020, Fall 2020, Spring 2021, Fall 2021, \nSpring 2022\nMore Information \u00bb"}
{"number": 201, "title": "Data Structures", "description": "Data Structures\nIn this course we will study the ideas and structures helpful in \ndesigning algorithms and writing programs for solving large, complex \nproblems. The Java programming language and object-oriented paradigm are\n introduced in the context of important abstract data types (ADTs) such \nas stacks, queues, trees, and graphs. We will study efficient \nimplementations of these ADTs, and learn classic algorithms to \nmanipulate these structures for tasks such as sorting and searching. \nPrior programming experience is expected, but prior familiarity with the\n Java programming language is not assumed. (CSCI 0145 or CSCI 0150) \n(Juniors and Seniors by waiver) 3 hrs. lect./lab                  DED\n\nSpring 2017, Fall 2017, Spring 2018, Fall 2018, \nSpring 2019, Fall 2019, Spring 2020, Fall 2020, Spring 2021, Fall 2021, \nSpring 2022\nMore Information \u00bb"}
{"number": 202, "title": "Computer Architecture", "description": "Computer Architecture\nA detailed study of the hardware and software that make up a computer \nsystem. Topics include assembly language programming, digital logic \ndesign, microarchitecture, pipelines, caches, and RISC vs. CISC. The \ngoal of the course is teach students how computers are built, how they \nwork at the lowest level, and how this knowledge can be used to write \nbetter programs. (CSCI 0201) (Seniors by waiver) 3 hrs. lect./lab       \n           DED\n\nSpring 2017, Fall 2017, Spring 2018, Fall 2018, \nSpring 2019, Fall 2019, Spring 2020, Fall 2020, Spring 2021, Fall 2021, \nSpring 2022\nMore Information \u00bb"}
{"number": 301, "title": "Theory of Computation", "description": "Theory of Computation\nThis course explores the nature of computation and what it means to \ncompute. We study important models of computation (finite automata, \npush-down automata, and Turing machines) and investigate their \nfundamental computational power. We examine various problems and try to \ndetermine the computational power needed to solve them. Topics include \ndeterministic versus non-deterministic computation, and a theoretical \nbasis for the study of NP-completeness. (CSCI 0200 and CSCI 0201) 3 hrs.\n lect./disc.                  DED\n\nFall 2017, Spring 2018, Fall 2018, Spring 2019, Fall 2019, Spring 2020, Fall 2020, Spring 2021, Fall 2021, Spring 2022\nMore Information \u00bb"}
{"number": 302, "title": "Algorithms and Complexity", "description": "Algorithms and Complexity\nThis course focuses on the development of correct and efficient \nalgorithmic solutions to computational problems, on the underlying data \nstructures to support these algorithms, and on the social implications \nof algorithms. Topics include computational complexity, analysis of \nalgorithms, proof of algorithm correctness, some advanced data \nstructures, algorithmic techniques including greedy and dynamic \nprogramming, and the consequences of real-world applications of \nalgorithms. The course complements the treatment of NP-completeness in \nCSCI 0301. (CSCI 0200 and CSCI 0201) 3 hrs. lect./disc.                 \n DED\n\nSpring 2017, Fall 2017, Spring 2018, Fall 2018, \nSpring 2019, Fall 2019, Spring 2020, Fall 2020, Spring 2021, Fall 2021, \nSpring 2022\nMore Information \u00bb"}
{"number": 311, "title": "Artificial Intelligence", "description": "Artificial Intelligence\nArtificial Intelligence (AI) is the study of computational systems that \nexhibit rational behavior. Applications include strategic game playing, \nmedical diagnosis, speech and handwriting recognition, Internet search, \nand robotics. Course topics include intelligent agent architectures, \nsearch, knowledge representation, logical reasoning, planning, reasoning\n under uncertainty, machine learning, and perception and action. (CSCI \n0200 and CSCI 0201) 3 hrs. lect./lab                  DED\n\nSpring 2020, Spring 2021, Spring 2022\nMore Information \u00bb"}
{"number": 312, "title": "Software Development", "description": "Software Development\nThis course examines the process of developing larger-scale software \nsystems. Laboratory assignments emphasize sound programming practices, \ntools that facilitate the development process, and teamwork. (CSCI 0200 \nand CSCI 0201) 3 hrs. lect./lab                \nSpring 2017, Spring 2018, Spring 2019, Fall 2019, Spring 2020, Fall 2020, Spring 2021, Fall 2021\nMore Information \u00bb"}
{"number": 313, "title": "Programming Languages", "description": "Programming Languages\nA systematic approach to concepts and features of programming languages.\n The course focuses on four major programming paradigms: procedural, \nobject-oriented, functional, and logic programming languages. Students \nwill program in several languages representing the different paradigms. \nTopics include grammars, data types, control structures, run-time \norganization, procedure activation, parameter passing, higher-order \nfunctions, lambda expressions, and unification. (CSCI 0200 and CSCI \n0202) 3 hrs. lect./lab                  DED\n\nSpring 2017, Fall 2020, Fall 2021\nMore Information \u00bb"}
{"number": 315, "title": "Systems Programming", "description": "Systems Programming\nStudents will become intimately acquainted with the low-level software \nservices that applications often take for granted.  Through a broad, \nproject-based survey of core system libraries and UNIX system calls, \nstudents will explore process management, memory management, linking and\n loading, threading, synchronization, filesystem operations, and \ninter-process communication (networking).  In each area, students will \nbuild software using these building blocks, gaining an understanding of \nthe behavior and efficiency of the tools at their disposal. Students \nwill also gain experience building larger, more complex systems upon \nwhich applications can be built.  This course is ideal for students who \nwish to understand and construct the software infrastructure upon which \nuser-level software depends. (CSCI 0202) 3 hrs. lect                  DED\n\nFall 2017, Fall 2018, Fall 2019, Fall 2020, Fall 2021\nMore Information \u00bb"}
{"number": 318, "title": "OOP & GUI Application Dev", "description": "Object-Oriented Programming and GUI Application Development\nIn this coding-intensive course students will deepen their understanding\n of data structures, algorithms, and object-oriented programming \nconcepts through development of GUI (Graphical User Interface) \napplications.  After a brief introduction to C++ and our development \nenvironment, Qt, we will immerse ourselves in them through work on an \narray of application development projects.  Along the way, we will be \nintroduced to a number of software development principles and build an \nunderstanding of fundamental object-oriented concepts in C++, including \nclasses and inheritance, templates, pointers, constructors/destructors, \nand ownership. (CSCI 0202 or by waiver) 3 hrs lect./disc.               \n   DED\n\nSpring 2021, Fall 2021\nMore Information \u00bb"}
{"number": 321, "title": "Bioinformatics Algorithms", "description": "Bioinformatics Algorithms\nIn this course we will explore and implement algorithmic solutions to \nmodern biology questions. Students will be introduced to motivating \nbiological questions\u2014such as, \u201cHow do we compare DNA sequences?\u201d\u2014and \nthen implement solutions to those problems using dynamic programming, \ngraph, randomized, combinatorial and/or other algorithmic approaches. At\n the completion of the course students will be able to precisely define \ncomputational biology problems, design an algorithmic solution and \nimplement that solution in software. No biology background is assumed, \nbut students are expected to be able to implement sophisticated \nalgorithms in Python or another language of their choice. (CSCI 201) 3 \nhrs. lect./lab.                  DED\n\nSpring 2017, Spring 2019, Spring 2022\nMore Information \u00bb"}
{"number": 333, "title": "Quantum Computing", "description": "Quantum Computing\nIn this course we will explore how quantum mechanics can be applied to \nproblems in communications, algorithms, detection, and cryptography. We \nwill learn how features such as entanglement, superposition, and \nno-cloning can sometimes give quantum systems an advantage over standard\n \u201cclassical\u201d computers. We will also discuss the current situation and \nchallenges facing experimental quantum computers, as well as the limits \nof quantum computing. No previous experience with quantum mechanics is \nrequired. (MATH 0200) 3 hrs lect./disc.                  DED\n\nSpring 2018, Fall 2019, Spring 2021\nMore Information \u00bb"}
{"number": 390, "title": "Spatial Agent-Based Modeling", "description": "Spatial Agent-Based Modeling\nIn this course students will learn efficient data structures and design \ntechniques for spatially-explicit agent-based modeling using the NetLogo\n programming language. Agent-based modeling techniques will be applied \nto problems in the social and natural sciences (such as graph pandemic \nmodeling and population dynamics), mathematics and computational \nsciences (such as graph algorithms), and agent-based games. We will also\n explore some advanced programming features of NetLogo. Students will \ndesign and implement a significant term software project. (CSCI 0201).  \n                DED\n\nSpring 2018, Winter 2021\nMore Information \u00bb"}
{"number": 401, "title": "Computational Complexity", "description": "Computational Complexity\nWe will study models of computation and investigate whether a model of \ncomputation can solve a given problem efficiently or not. We will \nconsider models that involve all-knowing provers, constrained space, \ncommunication limitations, randomness, and quantum resources, among \nothers. While not all of these models are realistic, by studying them, \nwe will gain insight into why certain classes of problems are easy or \ndifficult to solve. Students enrolled in the College Writing (CW) \nsection of the course will explore these ideas through writing, in \nparticular, in three contexts that are critical for theoretical computer\n science: the proof (expert audience), a review paper (non-expert \ncomputer science audience), and a popular science article (educated \npublic audience). (CSCI 0301 and CSCI 0302, or instructor approval).3 \nhrs. sem./1 hr. disc.                  CW DED\n\nFall 2020, Spring 2022\nMore Information \u00bb"}
{"number": 414, "title": "Advanced Operating Systems", "description": "Advanced Operating Systems\nAn operating system manages the complex resources of modern computers \nand provides an interface between the user and the hardware. In this \ncourse, we will explore the key concepts of operating systems, including\n process, memory, and storage management; synchronization and deadlock; \nprotection and security; and distributed systems. (not open to students \nwho have taken CSCI 0314) (CSCI 315)  3 hrs lect.                  DED\n\nSpring 2019, Spring 2022\nMore Information \u00bb"}
{"number": 416, "title": "Parallel Computing", "description": "Parallel Computing\nMost modern computer architectures are parallel at multiple scales. In \nthis course students will learn to develop programs that can efficiently\n use those parallel resources to improve performance and solve ever \nlarger problems. Through a project-based survey students will be \nintroduced to parallel hardware (multicore processors, clusters, GPUs), \nmemory models (shared vs. non-shared), locality, synchronization, and \ndifferent parallel programming models (threads, MapReduce, \nmessage-passing, SIMT, and more). Programming assignments will be \nimplemented in multiple languages. (CSCI 202) 3hrs. lect./lab           \n       DED\n\nSpring 2020\nMore Information \u00bb"}
{"number": 431, "title": "Computer Networks", "description": "Computer Networks\nComputer networks have had a profound impact on modern society. This \ncourse will investigate how computer networks are designed and how they \nwork. Examples from the Internet as well as our own campus network will \nbe discussed. (CSCI 0200 and CSCI 0315) 3 hrs. lect./lab                \n  DED\n\nSpring 2018, Spring 2020\nMore Information \u00bb"}
{"number": 433, "title": "Compiler Design", "description": "Compiler Design\nAn introduction to the design and construction of compilers and \ntranslators. Topics include context-free grammars, lexical analysis, \nsymbol tables, top-down and bottom-up parsing, parser generators, error \nrecovery, run-time organization, declaration processing, type checking, \ncode generation, and optimization. Through the course of the semester \nstudents will implement a complete compiler for a simple programming \nlanguage. (CSCI 0202 and CSCI 0301) 3 hrs. lect./lab                  DED\n\nFall 2017, Fall 2019\nMore Information \u00bb"}
{"number": 435, "title": "Embedded Systems", "description": "Embedded Systems\nIn this course we will learn about microcontrollers (compact single-chip\n integrated circuits at the core of embedded systems), including their \narchitecture and how they interface with the outside world. In \nlaboratory assignments, we will experiment with different families of \nmicrocontrollers, analyze various types of interfaces, and learn how to \nconnect with external sensors and devices. While gaining hands-on \nfamiliarity with the different aspects of embedded systems, teams of \nstudents will engage in a semester-long project to design and build \ntheir own embedded system. (CSCI 0202) 3 hrs. lect./1.5 hrs. lab.       \n           DED\n\nFall 2019, Fall 2021\nMore Information \u00bb"}
{"number": 450, "title": "Fourier Signal Processing", "description": "Fourier Analysis and Signal Processing\nA wide range of computational applications involve oscillating signals \nin one or more dimensions.  Fourier analysis techniques make it possible\n to analyze these signals in terms of the frequency components that make\n them up, forming the basis for technologies ranging from audio and \nvideo compression to sound and image processing to automatic speech and \nimage recognition.  In this course we will introduce the mathematics of \nFourier series and transforms, their discretization through the Fast \nFourier Transform, and associated topics such as convolutions, filters, \nand uncertainty relations.  We will then apply these techniques to a \nvariety of examples, including music, speech, and images.  (MATH 0122 \nand MATH 0200 and CSCI 0201) 3 hrs. lect./lab                  DED\n\nSpring 2020\nMore Information \u00bb"}
{"number": 451, "title": "Machine Learning", "description": "Machine Learning\nMachine Learning is the study and design of computational systems that \nautomatically improve their performance through experience. This course \nintroduces the theory and practice of machine learning and its \napplication to tasks such as database mining, pattern recognition, and \nstrategic game-playing. Possible topics include decision-tree methods, \nneural networks, Bayesian and statistical methods, genetic algorithms, \nand reinforcement learning. (CSCI 0200 and CSCI 0201 and MATH 0200) 3 \nhrs. lect./lab                  DED\n\nFall 2017, Fall 2018, Spring 2021, Spring 2022\nMore Information \u00bb"}
{"number": 452, "title": "Image Processing", "description": "Image Processing\nIn this course students will learn basic image processing concepts and \nexplore practical cross-disciplinary case studies in teams.  They will \nuse open-source tools to tackle real-world image and video analysis \nproblems ranging from enhancing and denoising to tracking and extracting\n information from images and videos. Collaboratively, students will get \nto apply these tools to a problem of their choice in a semester-long \nproject.  (CSCI 0200 and CSCI 201) 3 hrs. lect./lab.                  DED\n\nFall 2018, Spring 2022\nMore Information \u00bb"}
{"number": 453, "title": "Computer Vision", "description": "Computer Vision\nThe goal of computer vision is to extract information from digital \nimages and movies. Topics covered in this course include algorithms for \nedge and motion detection, stereo vision, object recognition, and \nrecovering structure from motion. A range of mathematical techniques \nwill be used to model problems and algorithms. Students will implement, \ntest, and evaluate several computer vision techniques, and will gain \nexperience with analyzing real, noise-contaminated image data. (CSCI \n0202 and MATH 0200) 3 hrs. lect./lab                  DED\n\nSpring 2020\nMore Information \u00bb"}
{"number": 454, "title": "Biometrics", "description": "Biometrics\nBiometric recognition, or simply biometrics, is the science of \nestablishing the identity of a person based on physical or behavioral \nattributes. In this course we will cover the three primary modalities of\n biometric recognition, namely fingerprint, face, and iris. We will also\n introduce other emerging technologies such as recognition of gait, hand\n geometry, and ear. Other topics will include the security of \nbiometrics, statistics for biometric evaluation, spoofing, ethical \nissues related to biometric technology, the relation to forensic \nscience, and the impact biometric recognition has had on the judicial \nsystem. (CSCI 0200 and CSCI 201) 3 hrs. lect./lab.                  DED\n\nFall 2017, Fall 2020\nMore Information \u00bb"}
{"number": 455, "title": "Drone Robotics", "description": "Drone Robotics\nIn this course we will introduce the fundamental concepts of robotics, \nspecifically focusing on drones using current research and applications.\n Topics will include drone control, flight planning, obstacle avoidance,\n and sensing. We will utilize tools from computer vision, image \nprocessing, and artificial intelligence, and we will complete \nexperiments using small drones in compliance with college policy. (CSCI \n0200 and CSCI 201) 3 hrs. lect./lab                  DED\n\nSpring 2019, Spring 2021\nMore Information \u00bb"}
{"number": 461, "title": "Computer Graphics", "description": "Computer Graphics\nComputer graphics is the study of how computers represent, manipulate, \nand ultimately display visual information. In this course we will focus \nprimarily on three-dimensional graphics, touching on topics such as \nmodeling (meshes, hierarchical models, and transformations), rendering \n(lighting, texturing, rasterization, and clipping), animation, and GPU \nprogramming. We will look at the mathematical foundations of these \ntechniques as well as implementation techniques using WebGL. (CSCI 0202 \nand MATH 0200) 3 hrs. lect./lab                  DED\n\nWinter 2021, Fall 2021\nMore Information \u00bb"}
{"number": 465, "title": "Information Visualization", "description": "Information Visualization\nInformation visualization is used to reveal patterns, trends, and \noutliers within abstract data. In this course we will cover topics such \nas the transformation of data to visual representations, common \napproaches to dealing with different types of data, perceptual issues \nthat govern how visualizations are interpreted, and the development of \ninteractive visualization tools. This course will culminate in a \nsignificant final visualization project. (CSCI 0201)                  DED\n\nFall 2018, Fall 2021\nMore Information \u00bb"}
{"number": 466, "title": "Usable Mobile Interfaces", "description": "Usable Interface Design for Mobile Applications\nIn this course we will explore the fundamental concepts of \nhuman-computer interaction and interface design. We will focus on \napplying an iterative, human-centric design process to mobile \ndevelopment.  Topics will include user interface design, user \nexperience, usability, prototyping, user testing, and mobile \ndevelopment. A significant portion of the class will be spent developing\n a mobile app, walking it through the various prototyping and testing \nstages. (CSCI 0312) 3 hrs. lect./lab.                  DED\n\nSpring 2017, Fall 2019, Spring 2022\nMore Information \u00bb"}
{"number": 467, "title": "Generative Art", "description": "Generative Art\nIn this course we will explore the field of generative art \u2013 the \nartistic practice based on the creation of processes that yield art and \ndesign as an output. Through projects, we will find new applications for\n computing techniques such as visualization, physical simulation, \nstochastic processes, agent-based modeling, iterated function systems, \nfractals, genetic algorithms and machine learning. A portion of the \nclass will also be devoted to reading research literature and discussing\n the nature of computation creativity. A background in art is not \nrequired. (CSCI 0201) (not open to students who have taken CSCI 1003) 3 \nhrs. lect./lab.                  ART DED\n\nSpring 2020\nMore Information \u00bb"}
{"number": 500, "title": "Advanced Study", "description": "Advanced Study\nIndividual study for qualified students in more advanced topics in \ncomputer science theory, systems, or application areas. Particularly \nsuited for students who enter with advanced standing. (Approval \nrequired) 3 hrs. lect.                \nSpring 2017, Fall 2017, Winter 2018, Spring 2018, \nFall 2018, Winter 2019, Spring 2019, Fall 2019, Winter 2020, Spring \n2020, Fall 2020, Winter 2021, Spring 2021, Fall 2021, Spring 2022\nMore Information \u00bb"}
{"number": 701, "title": "Senior Seminar", "description": "Senior Seminar\nThis senior seminar provides a capstone experience for computer science \nmajors at Middlebury College. Through lectures, readings, and a series \nof two to three week individual and group assignments, we will introduce\n important concepts in research and experimental methods in computation.\n Examples will include: reading research papers; identifying research \nproblems; dealing with big data; experimental design, testing and \nanalysis; and technical writing in computer science. (Approval only).   \n             \nSpring 2017, Fall 2017, Spring 2018, Fall 2018, \nSpring 2019, Fall 2019, Spring 2020, Fall 2020, Spring 2021, Fall 2021, \nSpring 2022\nMore Information \u00bb"}
{"number": 702, "title": "Senior Thesis", "description": "Senior Thesis\nThe senior thesis is required for all CSCI majors who wish to be \nconsidered for high and highest departmental honors, and is recommended \nfor students interested in pursuing graduate study in computer science. \nStudents will spend the semester researching and writing, and developing\n and experimenting as appropriate for their topic. All students will be \nexpected to report on their work in the form of a written thesis, a \nposter, and an oral presentation at the end of the semester. In \naddition, throughout the semester, students will meet as a group to \ndiscuss research and writing, and will be expected to attend talks in \nthe Computer Science lecture series. Before approval to join the class \nis granted, students are expected to have chosen a thesis adviser from \nthe CSCI faculty, and determined a thesis topic with the guidance and \napproval of that adviser. (CSCI 0701 and approval required) 3 hrs. \nlect./disc.                \nSpring 2017, Fall 2017, Winter 2018, Spring 2018, \nFall 2018, Spring 2019, Fall 2019, Spring 2020, Fall 2020, Winter 2021, \nSpring 2021, Fall 2021, Spring 2022\nMore Information \u00bb"}
{"number": 1005, "title": "Crash Course/Systems Security", "description": "Crash Course in Systems Security\nIn this course students will learn the theory and practice of computer \nsystems security.  Morning lectures will be complemented by afternoon \nlab-sessions in which, under the close guidance of the instructor, \nstudents will complete both individual and group projects that will \ndeepen their understanding of how (in)secure systems are implemented.  \nStudents will learn to use industry-standard tools for performing \nanalysis of system vulnerabilities; be introduced to the systems \nsecurity research landscape; and gain an understanding of ethical, \npolitical, and financial issues surrounding systems security research. \n(Approval required; CSCI 0202)                  DED WTR\n\nWinter 2018, Winter 2019, Winter 2020\nMore Information \u00bb"}
{"number": 1007, "title": "Human Genome Analysis", "description": "Practical Analysis of a Personal Genome\nIn this hands-on laboratory-style course, we will analyze a human genome\n starting from the raw sequencing data (publicly available). Using \ndatabases, scientific literature and other resources, students will \nformulate hypotheses about that person\u2019s ancestry, physical traits, and \ndisease susceptibility based on the genomic data. At the conclusion of \nthe course, students will be able to describe the science underlying \nhuman genome analysis, employ and interpret the results of \nbioinformatics software tools, and debate the ethical, legal and social \nimplications of personal genomics. No biology background is assumed, but\n students are expected to be able to use command-line software tools. \n(CSCI 101 or CSCI 150)                  DED WTR\n\nWinter 2019\nMore Information \u00bb"}
{"number": 1012, "title": "Bias, Belonging, Power in Tech", "description": "Bias, Belonging, and Power in Technology\nAlgorithms and big data are informing increasingly important decisions, \nfrom hiring to setting bail. While we like to think that computers act \nobjectively, in this class we will examine how technology reflects and \noften reinforces the biases and power structures of the culture that \ncreates it. Since technology is a reflection of the society that creates\n it, we will also learn about who has been historically welcomed to or \nexcluded from the spaces where computing technology is made. The course \nwill involve reading, discussion, written reflections, an oral \npresentation, as well as a coding project that creatively engages with \nthe course topics. (One CSCI course at the 0100-level)                  SOC WTR\n\nWinter 2021\nMore Information \u00bb"}
{"number": 1015, "title": "Intro to Rocket Propulsion", "description": "Introduction to Rocket Propulsion\nIn this course we will investigate the following questions: What is \nrocket propulsion? How do we send humans and robots to space? How do \nchemical and electrical rockets work and what applications are they \nsuitable for? How do spacecraft travel to other planets? How can we use \ncomputers to design rockets and their trajectories? We will dive into \ntopics including chemical combustion, energy conversion, ionized gases, \nlaunch vehicle design and trajectories, Kepler\u2019s Laws, orbit transfers, \nand much more. We will also read Hidden Figures and have weekly\n discussions about the text. Assignments will consist of readings, \nhandwritten problem sets, programming assignments, and a short \nreflection paper on Hidden Figures.  (CSCI 101 or CSCI 0145 or CSCI 150, or equivalent and PHYS 109 or equivalent and MATH 0121 or equivalent)                  SCI WTR\n\nWinter 2021\nMore Information \u00bb"}
